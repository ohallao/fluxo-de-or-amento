# -*- coding: utf-8 -*-
"""Untitled22.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1CWLaZ1m2KZL8gRubGkJ55bOgmEo4-e5V
"""

import streamlit as st
import pandas as pd
import plotly.express as px

# Função para gerar dados de exemplo para cada mês
def gerar_dados_exemplo():
    meses = ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 
             'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro']
    dados = {mes: {"Receitas": 0, "Despesas Fixas": 0, "Despesas Variáveis": 0, "Impostos": 0, "Investimentos": 0} for mes in meses}
    return dados

# Função para calcular totais mensais e fluxo de caixa
def calcular_fluxo_caixa(dados_mensais):
    receitas = dados_mensais['Receitas']
    despesas = dados_mensais['Despesas Fixas'] + dados_mensais['Despesas Variáveis'] + dados_mensais['Impostos'] + dados_mensais['Investimentos']
    fluxo_caixa = receitas - despesas
    return receitas, despesas, fluxo_caixa

# Dados financeiros para cada mês
dados_por_mes = gerar_dados_exemplo()

# Página Inicial - Resumo Anual
st.title('Dashboard Financeiro Anual')

# Tabela de Resumo para todos os meses
st.header('Resumo Mensal')
resumo = {"Meses": [], "Receitas": [], "Despesas": [], "Fluxo de Caixa": []}
for mes, dados in dados_por_mes.items():
    receitas, despesas, fluxo_caixa = calcular_fluxo_caixa(dados)
    resumo['Meses'].append(mes)
    resumo['Receitas'].append(receitas)
    resumo['Despesas'].append(despesas)
    resumo['Fluxo de Caixa'].append(fluxo_caixa)

df_resumo = pd.DataFrame(resumo)
st.write(df_resumo)

# Gráfico Anual de Linha
st.header('Gráfico Anual - Receitas e Despesas')
fig_anual = px.line(df_resumo, x="Meses", y=["Receitas", "Despesas"], title="Evolução Anual de Receitas e Despesas")
st.plotly_chart(fig_anual)

# Seletor de Mês
st.header('Detalhes por Mês')
mes_selecionado = st.selectbox("Selecione o mês", df_resumo['Meses'])

# Dados detalhados do mês selecionado
st.subheader(f'Detalhes de {mes_selecionado}')
dados_mes_selecionado = dados_por_mes[mes_selecionado]

# Exibir dados detalhados e permitir que o usuário altere
dados_mes_selecionado['Receitas'] = st.number_input("Receitas", value=dados_mes_selecionado['Receitas'])
dados_mes_selecionado['Despesas Fixas'] = st.number_input("Despesas Fixas", value=dados_mes_selecionado['Despesas Fixas'])
dados_mes_selecionado['Despesas Variáveis'] = st.number_input("Despesas Variáveis", value=dados_mes_selecionado['Despesas Variáveis'])
dados_mes_selecionado['Impostos'] = st.number_input("Impostos", value=dados_mes_selecionado['Impostos'])
dados_mes_selecionado['Investimentos'] = st.number_input("Investimentos", value=dados_mes_selecionado['Investimentos'])

# Recalcular o fluxo de caixa
receitas_mes, despesas_mes, fluxo_caixa_mes = calcular_fluxo_caixa(dados_mes_selecionado)
st.write(f"Fluxo de Caixa: R$ {fluxo_caixa_mes}")

# Gráfico de Pizza (Porcentagem) para o mês selecionado
st.subheader(f'Distribuição das Despesas de {mes_selecionado}')
dados_pie = pd.DataFrame({
    "Categoria": ["Despesas Fixas", "Despesas Variáveis", "Impostos", "Investimentos"],
    "Valor": [dados_mes_selecionado['Despesas Fixas'], dados_mes_selecionado['Despesas Variáveis'], 
              dados_mes_selecionado['Impostos'], dados_mes_selecionado['Investimentos']]
})
fig_pizza = px.pie(dados_pie, names='Categoria', values='Valor', title=f'Distribuição de Despesas em {mes_selecionado}')
st.plotly_chart(fig_pizza)
